plugins {
    id 'java'
    id 'application'
    id "com.github.hierynomus.license" version "0.15.0"
}

sourceCompatibility = '11'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

wrapper {
    gradleVersion = '6.3'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

license {
    header = rootProject.file('config/HEADER')
    strictCheck = true
    ignoreFailures = true
    mapping {
        java   = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
        fxml   = 'XML_STYLE'
    }
    ext.year   = '2019'
    ext.author = 'Michael Hoffer <info@michaelhoffer.de>'
    exclude '**/*.svg'
}

// /**
//  ******************  Script Configuration ******************
//  */
// buildscript {
//   repositories {
//     mavenLocal()
//     maven {
//       url "http://sandec.bintray.com/repo"
//     }
//     jcenter()
//   }

//   dependencies {
//     classpath 'com.jprotechnologies.jpro:jpro-plugin-gradle:2017.1.0-SNAPSHOT'
//   }
// }

def osName = System.getProperty("os.name").toLowerCase()
ext.platform = osName.contains("mac") ? 'mac' : osName.contains("windows") ? 'win' : osName;

if (!hasProperty('mainClass')) {
    ext.mainClass = 'eu.mihosoft.jgrounds.JGrounds'
    mainClassName = ext.mainClass
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.10'
    
    compile 'eu.mihosoft.jfx.scaledfx:scaledfx:0.6'

    compile group: 'org.codehaus.groovy', name: 'groovy', version: '3.0.3'
    // compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.4'
    // compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.4', classifier: 'javadoc'
    // compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.4', classifier: 'sources'

    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.10.2'
    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.10.2', classifier: 'javadoc'

    compile "org.openjfx:javafx-base:11:$platform"
    compile "org.openjfx:javafx-graphics:11:$platform"
    compile "org.openjfx:javafx-controls:11:$platform"
    compile "org.openjfx:javafx-fxml:11:$platform"
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls'
        ]
    }
}

run {
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls',
                '--add-exports', 'javafx.graphics/com.sun.javafx.util=ALL-UNNAMED',
                '--add-exports', 'javafx.base/com.sun.javafx.reflect=ALL-UNNAMED',
                '--add-exports', 'javafx.base/com.sun.javafx.beans=ALL-UNNAMED',
                '--add-exports', 'javafx.graphics/com.sun.glass.utils=ALL-UNNAMED',
                '--add-exports', 'javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED'
        ]
    }
}

/*
task run(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = mainClass
//    jvmArgs = ['-Dprism.forceGPU=true', '-Dprism.verbose=true', '-Dprism.order=es2,d3d,sw']
//    jvmArgs = ['-Dprism.forceGPU=true']
}
*/

/**
 ******************  jpro Configuration ******************
 */
// apply plugin: 'com.jprotechnologies.jpro'
// 
// jproStartCommand {
  // jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,address=5006,suspend=y'
// }

/**
 * App Main Class
 */
// mainClassName = mainClass

// jpro {
//   //jpro server port
//   useGradleLogging = true
//   port = 8080

//   //wenn mehrere Stages Ã¼ber eine main() gestartet werden
//   //useMainMethod=true

//   //jpro version
//   jproVersion = "2017.1.0-SNAPSHOT"

//   openingPath = "/test/fullscreen/default"
// }